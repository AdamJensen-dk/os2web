<?php

define('AVAILABLE_PUBLIC', 3);
define('DEFAULT_DOC_CACHE_PATH', 'public://pws_documents/');

function os2web_pws_menu() {
  $items['admin/config/os2web/pws'] = array(
      'title' => 'PWS Setup',
      'description' => t('Set up endpoints for PWS webservices.'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('os2web_pws_config_form'),
      'access arguments' => array('administer os2web'),
      'file' => 'os2web_pws.admin.inc',
      'type' => MENU_NORMAL_ITEM | MENU_LOCAL_TASK,
  );
  $items['os2web/test/pws'] = array(
      'title' => 'PWS Test',
      'page callback' => 'os2web_test_page',
      'access arguments' => array('administer os2web'),
      'type' => MENU_CALLBACK,
  );
  $items['os2web/showcase/%'] = array(
      'title callback' => 'os2web_pws_case_listing_title',
      'title arguments' => array(2),
      'page callback' => 'os2web_pws_case_listing',
      'page arguments' => array(2),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
  $items['os2web/showcase/%/%'] = array(
      'title callback' => 'os2web_pws_case_listing_title',
      'title arguments' => array(2, 3),
      'page callback' => 'os2web_pws_case_listing',
      'page arguments' => array(2, 3),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
  return $items;
}

function os2web_pws_theme() {
  return array(
      'esdh_document' => array(
          'variables' => array('id' => FALSE),
          'file' => 'os2web_pws.theme.inc',
      ),
      'esdh_case' => array(
          'variables' => array('id' => FALSE),
          'file' => 'os2web_pws.theme.inc',
      ),
  );
}

/**
 * Factory for class instances. This allows easy changing between api classes.
 * TODO: Make this proper plugin-able.
 *
 * @return AcadrePWS object
 */
function _os2web_pws_get_instance() {
  module_load_include('inc', 'os2web_pws', 'AcadrePWS.class');
  return new AcadrePWS();
//  module_load_include('inc', 'os2web_pws', 'AcadrePWSMock.class');
//  return new AcadrePWSMock();
}

/**
 * Factory for class instances. This allows easy changing between api classes.
 * TODO: Make this proper plugin-able.
 *
 * @return AdLibWS object
 */
function _os2web_adlib_get_instance() {
  module_load_include('inc', 'os2web_pws', 'AdLibWS.class');
  return new AdLibWS();
//  module_load_include('inc', 'os2web_pws', 'AcadrePWSMock.class');
//  return new AcadrePWSMock();
}

function os2web_pws_case_listing_title($id, $id2 = false) {
  $case = &drupal_static('os2web_pws_case', FALSE);
  if (FALSE === $case) {
    $pws = _os2web_pws_get_instance();
    if (FALSE != $id2) {
      $id = $pws->lookupCase($id . "/" . $id2);
    }
    $case = $pws->fetchCase($id);
  }
  if (FALSE != $case) {
    return t('Show case: @caseid - @titletext', array('@caseid' => $case->CaseFileNumberIdentifier, '@titletext' => $case->CaseFileTitleText));
  } else {
    return t('Case not found');
  }
}

function os2web_pws_case_listing($id, $id2 = false) {
  $pws = _os2web_pws_get_instance();
  error_log(basename(__FILE__) . ':' . __LINE__ . ' Var: $id = ' . print_r($id, 1));
  error_log(basename(__FILE__) . ':' . __LINE__ . ' Var: $id2 = ' . print_r($id2, 1));
  if (FALSE != $id2) {
    $id = $pws->lookupCase($id . "/" . $id2);
  }
  $output = theme('esdh_case', array('id' => $id));
  if (FALSE != $output) {
    return $output;
  } else {
    drupal_not_found();
  }
}

function os2web_test_page() {
  error_log('MARK - ' . basename(__FILE__) . ':' . __LINE__ . ' in ' . __FUNCTION__ . '()');
  $pws = _os2web_pws_get_instance();
  $adlib = _os2web_adlib_get_instance();
//  $call = $pws->lookupCase('11/14293');
//  $call = $pws->fetchCase(349566);
//  $call = $pws->getCaseDocs($pws->lookupCase('11/4949'));
//  $call = $pws->getCaseDocs($pws->lookupCase('12/6202'));
//  $call = $pws->getCaseDocs($pws->lookupCase('11/14293'));
//  $call = $pws->fetchCase($pws->lookupCase('12/6202'));
//  $call = $pws->getCaseDocs(373830);
//  $call = $pws->fetchCase(340222);
//  return _os2web_get_rendered_doc(array(1420175,1369822));
//  $call = $pws->getDocument(1565429);
//  $call = $pws->getDocument($pws->lookupDoc('79339/11'));
//
//  $call = $pws->getDocFileName(3023484,1);
//  $call = $pws->getDocFileName(1565429);
//  $call = $pws->getDocFileName(3258320,1);
//  $call = $pws->getDocData(3258320, 1);
//  $call = $pws->getDocData(1565429);
//  $call = $pws->getDocDataRaw(1428287);
//  $call = $adlib->uploadData('test.txt', 'test');
//  error_log(basename(__FILE__) . ':' . __LINE__ . ' Var: $call = ' . print_r($call, 1));
//  $call = $adlib->addJob($call);
//  $call = '162749a4-c4ac-4119-bdf8-5ba561fbfb0b\311';
//  $call = $adlib->getJobStatus($call);
//  $call = $adlib->__getFunctions();
//  $call = 'test';
//
//  $call = $call->ArrayOfDocuments->DocumentOutput;
//  $call = $pws->lookupDoc('4949/11');
//  error_log(var_export($call,1));
//  foreach ($call as $item) {
//    error_log(basename(__FILE__) . ':' . __LINE__ . ' Var: $item = ' . print_r($item, 1));
//  }
//  return 'test';
  return theme('esdh_case', array('id' => 349566));
  return '<div><textarea cols="150" rows=50>' . print_r($call, 1) . '</textarea>
    <textarea cols="150" rows=20>' . print_r($adlib->getTrace(), 1) . '</textarea></div>';
}

/**
 * Implementation of hook_init()
 */
function os2web_pws_init() {
  _os2web_pws_process_pdf(1);
}

function _os2web_pws_process_pdf($limit = FALSE) {
// Locate any finished jobs
  $files = db_select('os2web_pws_doc_files', 'f')->fields('f')->isNotNull('job_id')->condition('job_id', array('Complete'), 'NOT IN');
  if ($limit !== FALSE) {
    $files->range(0, $limit);
  }
  $files = $files->execute();
  if (count($files) > 0) {
    $adlib = _os2web_adlib_get_instance();
    foreach ($files as $file) {
      $jobinfo = $adlib->getJobStatus($file->job_id);
      if (in_array($jobinfo->status, array('Not found', 'Failed'))) {
        $record = array(
            'fid' => $file->fid,
            'job_id' => null,
            'job_info' => null,
        );
        drupal_write_record('os2web_pws_doc_files', $record, array('fid'));
      } else if (in_array($jobinfo->status, array('Complete'))) {
        $record = array(
            'fid' => $file->fid,
            'job_id' => 'Complete',
        );
        $jobfileinfo = unserialize($file->job_info);

        $file_url = $jobfileinfo['out_url'] . rawurlencode($jobfileinfo['out_filename']);
        $download = curl_init($file_url);
        if (variable_get('os2web_pws_proxy')) {
          curl_setopt($download, CURLOPT_PROXY, variable_get('os2web_pws_host'));
          curl_setopt($download, CURLOPT_PROXYPORT, variable_get('os2web_pws_port'));
          curl_setopt($download, CURLOPT_HTTPPROXYTUNNEL, TRUE);
        }
        curl_setopt($download, CURLOPT_RETURNTRANSFER, TRUE);
        $data = curl_exec($download);

        //FIXME: Replace with proper returncode check
        if (!in_array(substr($data, 0, 20), array('<h1>Bad Request</h1>', '<!DOCTYPE HTML PUBLI'))) {

          $uri = file_unmanaged_save_data($data, DEFAULT_DOC_CACHE_PATH . $jobfileinfo['out_filename'], FILE_EXISTS_REPLACE);

          $upd_file = file_load($file->fid);
          $upd_file->uri = $uri;
          $upd_file->filename = basename($uri);
          $upd_file->filemime = file_get_mimetype($upd_file->uri);
          $upd_file->filesize = filesize(drupal_realpath($upd_file->uri));
          $upd_file->timestamp = time();
          error_log(basename(__FILE__) . ':' . __LINE__ . ' Var: $upd_file = ' . print_r($upd_file, 1));
          drupal_write_record('os2web_pws_doc_files', $record, array('fid'));
          file_save($upd_file);
        }
      }
    }
  }

// Start new job if needed
  $files = db_select('os2web_pws_doc_files', 'f')->fields('f')->isNull('job_id');
  if ($limit !== FALSE) {
    $files->range(0, $limit);
  }
  $files = $files->execute();
  if (count($files) > 0) {
    $adlib = _os2web_adlib_get_instance();
    $pdfs = _os2web_pws_is_file_pdf($files->fetchAll(PDO::FETCH_COLUMN, 0));

    foreach ($pdfs as $file) {
      if ($file['is_pdf'] === FALSE) {
        $upload = $adlib->uploadData($file['file']->filename, file_get_contents(drupal_realpath($file['file']->uri)));
        $job = $adlib->addJob($upload);
        $jobinfo = array(
            'fid' => $file['file']->fid,
            'job_id' => (string) $job->JobSettings['JobID'],
            'job_info' => $upload,
        );
        drupal_write_record('os2web_pws_doc_files', $jobinfo, array('fid'));
      }
    }
  }
}

/**
 * Implementation of hook_file_insert()
 */
function os2web_pws_file_insert($file) {

}

function _os2web_pws_is_file_pdf($fid) {
  if (is_array($fid)) {
    $result = array();
    $files = file_load_multiple($fid);
    foreach ($files as $file) {
      $result[$file->fid]['is_pdf'] = strcasecmp(pathinfo($file->filename, PATHINFO_EXTENSION), 'pdf') === 0;
      $result[$file->fid]['file'] = $file;
    }
    return $result;
  } else {
    return strcasecmp(pathinfo(file_load($fid)->filename, PATHINFO_EXTENSION), 'pdf') === 0;
  }
}