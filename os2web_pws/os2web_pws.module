<?php

define('AVAILABLE_PUBLIC', 3);

function os2web_pws_admin_paths() {
  return array(
      'admin/config/os2web' => TRUE,
      'admin/config/os2web/pws' => TRUE,
  );
}

function os2web_pws_menu() {
  $items['admin/config/os2web/pws'] = array(
      'title' => 'PWS Setup',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('os2web_config_form'),
      'access callback' => TRUE,
      'file' => 'os2web_pws.admin.inc',
      'type' => MENU_LOCAL_TASK | MENU_NORMAL_ITEM,
  );
  $items['os2web/test/pws'] = array(
      'title' => 'PWS Test',
      'page callback' => 'os2web_test_page',
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  $items['os2web/pws/%'] = array(
      'title callback' => 'os2web_pws_case_listing_title',
      'title arguments' => array(2),
      'page callback' => 'os2web_pws_case_listing',
      'page arguments' => array(2),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
  $items['os2web/pws/%/%'] = array(
      'title callback' => 'os2web_pws_case_listing_title',
      'title arguments' => array(2, 3),
      'page callback' => 'os2web_pws_case_listing',
      'page arguments' => array(2, 3),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
  );
  return $items;
}

function os2web_pws_theme() {
  return array(
      'esdh_document' => array(
          'variables' => array('id' => FALSE),
      ),
      'esdh_case' => array(
          'variables' => array('id' => FALSE),
      ),
  );
}

/**
 * Factory for class instances. This allows easy changing between api classes.
 * TODO: Make this proper plugin-able.
 *
 * @return AcadrePWS object
 */
function _os2web_pws_get_instance() {
//  module_load_include('inc', 'os2web_pws', 'AcadrePWS.class');
//  return new AcadrePWS();
  module_load_include('inc', 'os2web_pws', 'AcadrePWSMock.class');
  return new AcadrePWSMock();
}

function os2web_pws_case_listing_title($id, $id2 = false) {
  $case = &drupal_static('os2web_pws_case', FALSE);
  if (FALSE === $case) {
    $pws = _os2web_pws_get_instance();
    if (FALSE != $id2) {
      $id = $pws->lookupCase($id . "/" . $id2);
    }
    $case = $pws->fetchCase($id);
  }
  error_log(basename(__FILE__) . ':' . __LINE__ . ' Var: $case = ' . print_r($case, 1));
  if (FALSE != $case) {
    return t('Show case: @caseid - @titletext', array('@caseid' => $case->CaseFileNumberIdentifier, '@titletext' => $case->CaseFileTitleText));
  } else {
    return t('Case not found');
  }
}

function os2web_pws_case_listing($id, $id2 = false) {
  $pws = _os2web_pws_get_instance();
  if (FALSE != $id2) {
    $id = $pws->lookupCase($id . "/" . $id2);
  }
  $output = theme('esdh_case', array('id' => $id));
  if (FALSE != $output) {
    return $output;
  } else {
    drupal_not_found();
  }
}

function theme_esdh_case($vars) {
  $id = $vars['id'];

  $pws = _os2web_pws_get_instance();
  $case = $pws->fetchCase($id);
  if (FALSE === $case) {
    return FALSE;
  }
  $docs = $pws->getCaseDocs($id);
  $header = array(t('Title'), t('Contents'), t('Date'), t('Actions'));
  $rows = array();
  $rows[] = array($case->CaseFileTitleText, $case->CustomFields->df1, format_date(strtotime($case->CreationDate), 'custom', 'd-m-Y'), 'ph');
  $html = theme('table', array('header' => $header, 'rows' => $rows));
  $header = array(t('Document Title'), t('Date'), t('Actions'));
  $rows = array();
  foreach ($docs as $doc) {
    if ($doc->Record->PublicationIndicator == AVAILABLE_PUBLIC) {
      $row = array();
      $row[] = $doc->Document->DocumentTitleText;
      $row[] = format_date(strtotime($doc->Record->DocumentDate), 'custom', 'd-m-Y');
      $row[] = 'ph';
      $rows[] = $row;
    }
  }
  $html .= '<p>' . t('This case contains @docs public documents', array('@docs' => count($rows))) . '</p>';
  $html .= theme('table', array('header' => $header, 'rows' => $rows));
  return $html;
}

function theme_esdh_document($vars) {
  $id = $vars['id'];

  $pws = _os2web_pws_get_instance();
  if (!is_array($id)) {
    $id = array($id);
  }
  $html = '';
  $rows = array();
  $header = array(t('Title'), t('Description'), t('Date'));

  foreach ($id as $docid) {
    $doc = $pws->getDocument($docid);
    if (FALSE != $doc && $doc[3]->PublicationIndicator == AVAILABLE_PUBLIC) { // Only show public documents
      //FIXME: Check publication status
      $rows[] = array($doc[0]->DocumentTitleText, $doc[3]->DescriptionText, $doc[3]->DocumentDate);
    }
  }
  if (count($rows) == 0) {
    return false;
  }
  $html .= theme('table', array('header' => $header, 'rows' => $rows));
  return $html;
}

function os2web_test_page() {
  error_log('MARK - ' . basename(__FILE__) . ':' . __LINE__ . ' in ' . __FUNCTION__ . '()');
  $pws = _os2web_pws_get_instance();
//  $cid = $pws->lookupCase('11/14293');
//  $call = $pws->fetchCase($cid);
//  $call = $pws->getCaseDocs(340222);
//  $call = $pws->fetchCase(340222);
//  return _os2web_get_rendered_doc(array(1420175,1369822));
//  $call = $pws->getDocument(1420175);
  $call = $pws->getDocument(1369822);
//
//  $call = $pws->getDocFileName(3023484,1);
//  $call = $pws->getDocFileName(3081831,1);
//  $call = $pws->getDocData(3023484, 1);
//  $call = $call->ArrayOfDocuments->DocumentOutput;
//  $call = $pws->searchCases('12/2252');
//  error_log(var_export($call,1));
//  foreach ($call as $item) {
//    error_log(basename(__FILE__) . ':' . __LINE__ . ' Var: $item = ' . print_r($item, 1));
//  }
//  return 'test';
  return '<div><textarea cols="150" rows=50>' . print_r($call, 1) . '</textarea></div>';
}
