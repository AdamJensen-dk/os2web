<?php

/* Field information hooks */

function os2web_doc_field_field_info() {
  return array(
      'doc_ident' => array(
          'label' => t('ESDH Document'),
          'description' => 'Dokument-id skal være på formen nummer/år eller nummer-år. Flere dokumenter skal være adskildt af , (komma).',
          'default_widget' => 'doc_ident_widget',
          'default_formatter' => 'doc_ident_formatter',
      ),
  );
}

function os2web_doc_field_field_formatter_info() {
  return array(
      'doc_ident_formatter' => array(
          'label' => t('ESDH Document includer'),
          'field types' => array('doc_ident'),
      )
  );
}

function os2web_doc_field_field_widget_info() {

  return array(
      'doc_ident_widget' => array(
          'label' => t('Document Identifier'),
          'field types' => array('doc_ident'),
      )
  );
}

/**
 * Field widget form hook
 *
 */
function os2web_doc_field_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $field_name = $field['field_name'];
  $field_type = $field['type'];
  $default = '';
  if (isset($form_state['node']->{$field_name}[$langcode][$delta][$field_type])) {
    $default = ($form_state['node']->{$field_name}[$langcode][$delta][$field_type])? : 0;
  }
  switch ($instance['widget']['type']) {
    case 'doc_ident_widget':

      $element['doc_ident'] = array(
          '#type' => 'textfield',
          '#title' => $element['#title'],
          '#description' => $element['#description'],
          '#default_value' => $default,
          '#required' => $element['#required'],
          '#weight' => isset($element['#weight']) ? $element['#weight'] : 0,
          '#delta' => $delta,
      );
      break;
  }
  return $element;
}

function os2web_doc_field_field_is_empty($item, $field) {
  if (empty($item['doc_ident'])) {
    return true;
  }
}

function os2web_doc_field_field_validate($entity_type, $entity, $field, $instance, $langcode, $items, &$errors) {
  error_log('MARK - ' . basename(__FILE__) . ':' . __LINE__ . ' in ' . __FUNCTION__ . '()');

  foreach ($items as $delta => $item) {
    $docids = explode(',', $item['doc_ident']);
    foreach ($docids as $docid) {
      $docid = trim($docid);
      $valid = preg_match('/^\d{1,20}[-,\/]\d{2}$/', $docid); // Adopt this for further testing
      if (!$valid && ($docid!='')) {
        $errors[$field['field_name']][$langcode][$delta][] = array(
            'error' => 'Ugyldig fremstilling af dokument-id. Dokument-id skal være på formen nummer/år eller nummer-år. Flere dokumenter skal være adskildt af , (komma).',
            'message' => t('%name: illegal value.', array('%name' => $instance['label'])),
        );
      }
    }
  }
}

/**
 * Field formatter hook
 *
 */
function os2web_doc_field_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  switch ($display['type']) {
    case 'doc_ident_formatter':
      foreach ($items as $delta => $item) {
        if ($item['doc_ident']) {
          $docs = array();
          $ids = explode(',', $item['doc_ident']);
          error_log(basename(__FILE__) . ':' . __LINE__ . ' Var: $ids = ' . print_r($ids, 1));
          foreach ($ids as $id) {
            if (!is_numeric($id)) {
              $pws = _os2web_pws_get_instance();
              $docs[] = $pws->lookupDoc(trim($id));
            } else {
              $docs[] = trim($id);
            }
          }
          error_log(basename(__FILE__) . ':' . __LINE__ . ' Var: $docs = ' . print_r($docs, 1));
          $element[$delta]['#markup'] = '<div class="documenttable">' . theme('esdh_document', array('id' => $docs)) . '</div>';
        }
      }
      break;
  }
  return $element;
}

